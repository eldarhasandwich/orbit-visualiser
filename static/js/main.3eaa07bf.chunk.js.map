{"version":3,"sources":["Components/AddOrbitModal.tsx","Components/OrbitList.tsx","Components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["AddOrbitModal","props","addOrbitFn","useState","e","setE","a","setA","i","setI","long","setLong","arg","setArg","t","setT","isValidNumber","n","test","inputContents","title","value","onChangeFn","isValid","allValid","length","filter","size","extra","disabled","onClick","eccentricity","parseFloat","semimajorAxis","inclination","longitudeOfAscendingNode","argumentOfPeriapsis","trueAnomaly","map","field","placement","visible","color","addonBefore","onChange","target","style","marginBottom","OrbitListItem","id","orbit","rmOrbitFn","OrbitList","orbits","o","Header","Layout","Sider","Footer","Content","App","orbitList","updateOrbitList","overflow","height","left","width","newOrbit","uuidv4","marginRight","float","top","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"2NA0GeA,EAtGO,SAACC,GAEhB,IAEGC,EAAeD,EAAfC,WAFJ,EAIcC,mBAAS,KAJvB,mBAIGC,EAJH,KAIMC,EAJN,OAKcF,mBAAS,KALvB,mBAKGG,EALH,KAKMC,EALN,OAMcJ,mBAAS,KANvB,mBAMGK,EANH,KAMMC,EANN,OAOoBN,mBAAS,KAP7B,mBAOGO,EAPH,KAOSC,EAPT,OAQkBR,mBAAS,KAR3B,mBAQGS,EARH,KAQQC,EARR,OAScV,mBAAS,KATvB,mBASGW,EATH,KASMC,EATN,KAWEC,EAAgB,SAACC,GACrB,MAAQ,gCAAiCC,KAAKD,IAY1CE,EAAgB,CACpB,CACEC,MAAO,eACPC,MAAOjB,EACPkB,WAAYjB,EACZkB,QAASP,EAAcZ,IAEzB,CACEgB,MAAO,iBACPC,MAAOf,EACPgB,WAAYf,EACZgB,QAASP,EAAcV,IAEzB,CACEc,MAAO,cACPC,MAAOb,EACPc,WAAYb,EACZc,QAASP,EAAcR,IAEzB,CACEY,MAAO,kBACPC,MAAOX,EACPY,WAAYX,EACZY,QAASP,EAAcN,IAEzB,CACEU,MAAO,gBACPC,MAAOT,EACPU,WAAYT,EACZU,QAASP,EAAcJ,IAEzB,CACEQ,MAAO,eACPC,MAAOP,EACPQ,WAAYP,EACZQ,QAASP,EAAcF,KAIrBU,EAAWL,EAAcM,SAAWN,EAAcO,QAAO,SAAAlB,GAAC,OAAIA,EAAEe,WAASE,OAE/E,OACE,cAAC,IAAD,CACEE,KAAK,QACLP,MAAM,YACNQ,MACE,cAAC,IAAD,CACEC,UAAWL,EACXM,QAAS,WACP5B,EAAW,CACT6B,aAAcC,WAAW5B,GACzB6B,cAAeD,WAAW1B,GAC1B4B,YAAaF,WAAWxB,GACxB2B,yBAA0BH,WAAWtB,GACrC0B,oBAAqBJ,WAAWpB,GAChCyB,YAAaL,WAAWlB,KA/DlCT,EAAK,KACLE,EAAK,KACLE,EAAK,KACLE,EAAQ,KACRE,EAAO,KACPE,EAAK,MAiDD,oBAJJ,SAuBII,EAAcmB,KAAI,SAAAC,GAAK,OACrB,cAAC,IAAD,CAASC,UAAU,QAAQpB,MAAM,kBAAkBqB,SAAUF,EAAMhB,QAASmB,MAAM,SAAlF,SACE,cAAC,IAAD,CAAOC,YAAaJ,EAAMnB,MAAOC,MAAOkB,EAAMlB,MAAOuB,SAAU,SAAAxC,GAAC,OAAImC,EAAMjB,WAAWlB,EAAEyC,OAAOxB,QAAQyB,MAAO,CAACC,aAAc,iBC3FlIC,EAAgB,SAAC/C,GAIhB,IAEGgD,EAAyBhD,EAAzBgD,GAAIC,EAAqBjD,EAArBiD,MAAOC,EAAclD,EAAdkD,UAEnB,OACE,eAAC,IAAD,CACExB,KAAK,QACLP,MAAM,QACNQ,MAAO,mBAAGE,QAAS,WAAQqB,EAAUF,IAAOH,MAAO,CAAEJ,MAAO,OAArD,oBAHT,UAKE,+CAAkBQ,EAAMnB,aAAxB,OACA,iDAAoBmB,EAAMjB,cAA1B,OACA,8CAAiBiB,EAAMhB,YAAvB,OACA,8DAAiCgB,EAAMf,yBAAvC,OACA,wDAA2Be,EAAMd,oBAAjC,OACA,+CAAkBc,EAAMb,YAAxB,WAkCSe,EA7BG,SAACnD,GAIZ,IAEGoD,EAAkCpD,EAAlCoD,OAAQnD,EAA0BD,EAA1BC,WAAYiD,EAAclD,EAAdkD,UAE5B,OACE,gCAEIE,EAAOf,KAAI,SAAAgB,GAAC,OACV,cAAC,EAAD,CAEEL,GAAIK,EAAEL,GACNC,MAAOI,EAAEJ,MACTC,UAAWA,GAHNG,EAAEL,OAQb,cAAC,EAAD,CACE/C,WAAYA,Q,gBC5CZqD,EAAmCC,IAAnCD,OAAgBE,GAAmBD,IAA3BE,OAA2BF,IAAnBC,OAAOE,EAAYH,IAAZG,QA0FhBC,MAnFf,WAAgB,IAAD,EAE0BzD,mBAAsB,IAFhD,mBAEL0D,EAFK,KAEMC,EAFN,OAIiC3D,mBAAS,IAJ1C,gCAKiCA,mBAAS,KAL1C,mBA2Cb,OA3Ca,UA4CX,mCACE,eAAC,IAAD,WAEE,cAACsD,EAAD,CACEX,MAAO,CACLiB,SAAU,OACVC,OAAQ,QACRC,KAAM,GAERC,MAAO,IANT,SAQE,cAAC,EAAD,CACEb,OAAQQ,EACR3D,WAlDa,SAACiE,GACtBL,EAAgB,GAAD,mBAAOD,GAAP,CAAkB,CAAEZ,GAAImB,cAAUlB,MAAOiB,OAkDhDhB,UA/Cc,SAACF,GACvBa,EAAiBD,EAAUnC,QAAO,SAAA4B,GAAC,OAAIA,EAAEL,KAAOA,WAkD5C,eAAC,IAAD,WACE,eAACM,EAAD,CAAQT,MAAO,CAAEiB,SAAU,UAA3B,UACE,cAAC,IAAD,CAAQlC,UAAQ,EAACiB,MAAO,CAAEuB,YAAa,QAAvC,yBAGA,cAAC,IAAD,CAAQxC,UAAQ,EAACiB,MAAO,CAAEuB,YAAa,QAAvC,yBAGA,cAAC,IAAD,CAAQxC,UAAQ,EAACiB,MAAO,CAAEwB,MAAO,QAASC,IAAK,QAA/C,wCAIF,cAACZ,EAAD,sDC7EKa,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,EAAgBc,QAAQC,O","file":"static/js/main.3eaa07bf.chunk.js","sourcesContent":["import { Orbit } from '../Orbits/Orbit'\nimport { Card, Input, Button, Tooltip } from 'antd';\nimport { useState } from 'react';\n\nconst AddOrbitModal = (props: {\n  addOrbitFn: (orbit: Orbit) => void\n}) => {\n\n  const { addOrbitFn } = props\n\n  const [e, setE] = useState(\"0\")\n  const [a, setA] = useState(\"0\")\n  const [i, setI] = useState(\"0\")\n  const [long, setLong] = useState(\"0\")\n  const [arg, setArg] = useState(\"0\")\n  const [t, setT] = useState(\"0\")\n\n  const isValidNumber = (n: string): boolean => {\n    return (/^[0-9][0-9]*(\\.[0-9][0-9]*)?$/).test(n)\n  }\n\n  const resetInput = () => {\n    setE(\"0\")\n    setA(\"0\")\n    setI(\"0\")\n    setLong(\"0\")\n    setArg(\"0\")\n    setT(\"0\")\n  }\n\n  const inputContents = [\n    {\n      title: \"Eccentricity\",\n      value: e,\n      onChangeFn: setE,\n      isValid: isValidNumber(e)\n    },\n    {\n      title: \"Semimajor Axis\",\n      value: a,\n      onChangeFn: setA,\n      isValid: isValidNumber(a)\n    },\n    {\n      title: \"Inclination\",\n      value: i,\n      onChangeFn: setI,\n      isValid: isValidNumber(i)\n    },\n    {\n      title: \"Long. of Acend.\",\n      value: long,\n      onChangeFn: setLong,\n      isValid: isValidNumber(long)\n    },\n    {\n      title: \"Arg. of Peri.\",\n      value: arg,\n      onChangeFn: setArg,\n      isValid: isValidNumber(arg)\n    },\n    {\n      title: \"True Anomaly\",\n      value: t,\n      onChangeFn: setT,\n      isValid: isValidNumber(t)\n    }\n  ]\n\n  const allValid = inputContents.length === inputContents.filter(i => i.isValid).length\n\n  return (\n    <Card\n      size=\"small\"\n      title=\"New Orbit\"\n      extra={\n        <Button\n          disabled={!allValid}\n          onClick={() => {\n            addOrbitFn({\n              eccentricity: parseFloat(e),\n              semimajorAxis: parseFloat(a),\n              inclination: parseFloat(i),\n              longitudeOfAscendingNode: parseFloat(long),\n              argumentOfPeriapsis: parseFloat(arg),\n              trueAnomaly: parseFloat(t),\n            })\n            resetInput()\n          }}>\n            Create\n        </Button>\n      }\n    >\n\n      {\n        inputContents.map(field => (\n          <Tooltip placement=\"right\" title=\"Requires Number\" visible={!field.isValid} color='orange'>\n            <Input addonBefore={field.title} value={field.value} onChange={e => field.onChangeFn(e.target.value)} style={{marginBottom: \"4px\"}} />\n          </Tooltip>\n        ))\n      }\n\n    </Card>\n  )\n}\n\nexport default AddOrbitModal","\nimport { Orbit } from '../Orbits/Orbit'\nimport { Card} from 'antd';\n\nimport AddOrbitModal from './AddOrbitModal'\n\nconst OrbitListItem = (props: {\n  id: string\n  orbit: Orbit\n  rmOrbitFn: (id: string) => void\n}) => {\n\n  const { id, orbit, rmOrbitFn } = props\n\n  return (\n    <Card\n      size=\"small\"\n      title=\"Orbit\"\n      extra={<a onClick={() => { rmOrbitFn(id) }} style={{ color: \"red\" }}>Delete</a>}\n    >\n      <p> Eccentricity {orbit.eccentricity} </p>\n      <p> Semimajor Axis {orbit.semimajorAxis} </p>\n      <p> Inclination {orbit.inclination} </p>\n      <p> Longitude of Ascending Node {orbit.longitudeOfAscendingNode} </p>\n      <p> Argument of Periapsis {orbit.argumentOfPeriapsis} </p>\n      <p> True Anomaly {orbit.trueAnomaly} </p>\n    </Card>\n  )\n}\n\nconst OrbitList = (props: {\n  orbits: { id: string, orbit: Orbit }[]\n  addOrbitFn: (orbit: Orbit) => void\n  rmOrbitFn: (id: string) => void\n}) => {\n\n  const { orbits, addOrbitFn, rmOrbitFn } = props\n\n  return (\n    <div>\n      {\n        orbits.map(o =>\n          <OrbitListItem\n            key={o.id}\n            id={o.id}\n            orbit={o.orbit}\n            rmOrbitFn={rmOrbitFn}\n          />\n        )\n      }\n\n      <AddOrbitModal\n        addOrbitFn={addOrbitFn}\n      />\n\n    </div>\n  )\n}\n\nexport default OrbitList","import { useState } from 'react';\nimport OrbitList from './OrbitList';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Orbit } from '../Orbits/Orbit'\n\nimport { Button, Layout } from 'antd';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\ninterface UuidOrbit {\n  id: string\n  orbit: Orbit\n}\n\nfunction App() {\n\n  const [ orbitList, updateOrbitList ] = useState<UuidOrbit[]>([])\n\n  const [ selectedOrbitA, setSelectedOrbitA ] = useState(\"\")\n  const [ selectedOrbitB, setSelectedOrbitB ] = useState(\"\")\n\n  const addOrbitToList = (newOrbit: Orbit): void => {\n    updateOrbitList( [ ...orbitList, { id: uuidv4(), orbit: newOrbit} ] )\n  }\n\n  const deleteOrbitById = (id: string): void => {\n    updateOrbitList( orbitList.filter(o => o.id !== id) )\n  }\n\n  const selectOrbitInteraction = (id: string): void => {\n    if (selectedOrbitA === \"\") {\n      setSelectedOrbitA(id)\n      setSelectedOrbitB(\"\")\n      return\n    }\n\n    if (selectedOrbitB === \"\") {\n      setSelectedOrbitA(\"\")\n      return\n    }\n\n    // if we de-select orbit A, we want to push orbit B to A.\n    if (id === selectedOrbitA) {\n      const tmp = selectedOrbitB\n      setSelectedOrbitB(\"\")\n      setSelectedOrbitA(tmp)\n      return\n    }\n\n    if (id === selectedOrbitB) {\n      setSelectedOrbitB(\"\")\n      return\n    }\n\n    setSelectedOrbitB(id)\n  }\n\n  return (\n    <>\n      <Layout>\n\n        <Sider\n          style={{\n            overflow: 'auto',\n            height: '100vh',\n            left: 0\n          }}\n          width={280}\n        >\n          <OrbitList\n            orbits={orbitList}\n            addOrbitFn={addOrbitToList}\n            rmOrbitFn={deleteOrbitById}\n          />\n        </Sider>\n\n        <Layout>\n          <Header style={{ overflow: 'hidden' }}>\n            <Button disabled style={{ marginRight: \"10px\" }}>\n              Import List\n            </Button>\n            <Button disabled style={{ marginRight: \"10px\" }}>\n              Export List\n            </Button>\n            <Button disabled style={{ float: 'right', top: '15px' }}>\n              Generate Transfer Orbit\n            </Button>\n          </Header>\n          <Content>Draw orbits here at some point</Content>\n          {/* <Footer>Footer</Footer> */}\n        </Layout>\n\n      </Layout>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry: () => void)  => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}