{"version":3,"sources":["Components/OrbitList.tsx","Components/App.tsx","reportWebVitals.ts","index.tsx"],"names":["AddOrbitModal","props","addOrbitFn","useState","e","setE","a","setA","i","setI","long","setLong","arg","setArg","t","setT","filterInput","input","parseInt","replace","size","title","style","width","extra","onClick","eccentricity","semimajorAxis","inclination","longitudeOfAscendingNode","argumentOfPeriapsis","trueAnomaly","addonBefore","value","onChange","target","OrbitListItem","id","orbit","rmOrbitFn","OrbitList","orbits","map","o","App","orbitList","updateOrbitList","newOrbit","uuidv4","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"4MAMMA,EAAgB,SAACC,GAEhB,IAEGC,EAAeD,EAAfC,WAFJ,EAIgBC,mBAAS,GAJzB,mBAIIC,EAJJ,KAIOC,EAJP,OAKgBF,mBAAS,GALzB,mBAKIG,EALJ,KAKOC,EALP,OAMgBJ,mBAAS,GANzB,mBAMIK,EANJ,KAMOC,EANP,OAOsBN,mBAAS,GAP/B,mBAOIO,EAPJ,KAOUC,EAPV,OAQoBR,mBAAS,GAR7B,mBAQIS,EARJ,KAQSC,EART,OASgBV,mBAAS,GATzB,mBASIW,EATJ,KASOC,EATP,KAWEC,EAAc,SAACC,GACnB,OAAOC,SAASD,EAAME,QAAQ,MAAM,MAAQ,GAY9C,OACE,eAAC,IAAD,CACEC,KAAK,QACLC,MAAM,QACNC,MAAO,CAAEC,MAAO,KAChBC,MAAO,mBAAGC,QAAS,WACjBvB,EAAW,CACTwB,aAActB,EACduB,cAAerB,EACfsB,YAAapB,EACbqB,yBAA0BnB,EAC1BoB,oBAAqBlB,EACrBmB,YAAajB,IApBnBT,EAAK,GACLE,EAAK,GACLE,EAAK,GACLE,EAAQ,GACRE,EAAO,GACPE,EAAK,IAQI,oBAJT,UAgBE,cAAC,IAAD,CAAOiB,YAAY,eAAeC,MAAO7B,EAAG8B,SAAU,SAAA9B,GAAC,OAAIC,EAAKW,EAAYZ,EAAE+B,OAAOF,WACrF,cAAC,IAAD,CAAOD,YAAY,iBAAiBC,MAAO3B,EAAG4B,SAAU,SAAA9B,GAAC,OAAIG,EAAKS,EAAYZ,EAAE+B,OAAOF,WACvF,cAAC,IAAD,CAAOD,YAAY,cAAcC,MAAOzB,EAAG0B,SAAU,SAAA9B,GAAC,OAAIK,EAAKO,EAAYZ,EAAE+B,OAAOF,WACpF,cAAC,IAAD,CAAOD,YAAY,kBAAkBC,MAAOvB,EAAMwB,SAAU,SAAA9B,GAAC,OAAIO,EAAQK,EAAYZ,EAAE+B,OAAOF,WAC9F,cAAC,IAAD,CAAOD,YAAY,gBAAgBC,MAAOrB,EAAKsB,SAAU,SAAA9B,GAAC,OAAIS,EAAOG,EAAYZ,EAAE+B,OAAOF,WAC1F,cAAC,IAAD,CAAOD,YAAY,eAAeC,MAAOnB,EAAGoB,SAAU,SAAA9B,GAAC,OAAIW,EAAKC,EAAYZ,EAAE+B,OAAOF,eAKrFG,EAAgB,SAACnC,GAIhB,IAEGoC,EAAyBpC,EAAzBoC,GAAIC,EAAqBrC,EAArBqC,MAAOC,EAActC,EAAdsC,UAEnB,OACE,eAAC,IAAD,CACEnB,KAAK,QACLC,MAAM,QACNC,MAAO,CAAEC,MAAO,KAChBC,MAAO,mBAAGC,QAAS,WAAQc,EAAUF,IAA9B,oBAJT,UAME,+CAAkBC,EAAMZ,aAAxB,OACA,iDAAoBY,EAAMX,cAA1B,OACA,8CAAiBW,EAAMV,YAAvB,OACA,8DAAiCU,EAAMT,yBAAvC,OACA,wDAA2BS,EAAMR,oBAAjC,OACA,+CAAkBQ,EAAMP,YAAxB,WAiCSS,EA5BG,SAACvC,GAIZ,IAEGwC,EAAkCxC,EAAlCwC,OAAQvC,EAA0BD,EAA1BC,WAAYqC,EAActC,EAAdsC,UAE5B,OACE,gCAEIE,EAAOC,KAAI,SAAAC,GAAC,OACV,cAAC,EAAD,CACEN,GAAIM,EAAEN,GACNC,MAAOK,EAAEL,MACTC,UAAWA,OAKjB,cAAC,EAAD,CACErC,WAAYA,Q,QCrEL0C,MAzBf,WAAgB,IAAD,EAE0BzC,mBAAsB,IAFhD,mBAEL0C,EAFK,KAEMC,EAFN,KAYb,OACE,8BAEE,cAAC,EAAD,CACEL,OAAQI,EACR3C,WAbiB,SAAC6C,GACtBD,EAAgB,GAAD,mBAAOD,GAAP,CAAkB,CAAER,GAAIW,cAAUV,MAAOS,OAapDR,UAVkB,SAACF,GACvBS,EAAiBD,EAAUI,QAAO,SAAAN,GAAC,OAAIA,EAAEN,KAAOA,YCRrCa,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,EAAgBc,QAAQC,O","file":"static/js/main.826d9569.chunk.js","sourcesContent":["\nimport { Orbit } from '../Orbits/Orbit'\nimport { Card } from 'antd';\nimport { Input } from 'antd';\nimport { useState } from 'react';\n\nconst AddOrbitModal = (props: {\n  addOrbitFn: (orbit: Orbit) => void\n}) => {\n\n  const { addOrbitFn } = props\n\n  const [ e, setE ] = useState(0)\n  const [ a, setA ] = useState(0)\n  const [ i, setI ] = useState(0)\n  const [ long, setLong ] = useState(0)\n  const [ arg, setArg ] = useState(0)\n  const [ t, setT ] = useState(0)\n\n  const filterInput = (input: string): number => {\n    return parseInt(input.replace(/\\D/g,'')) || 0\n  }\n\n  const resetInput = () => {\n    setE(0)\n    setA(0)\n    setI(0)\n    setLong(0)\n    setArg(0)\n    setT(0)\n  }\n\n  return (\n    <Card\n      size=\"small\"\n      title=\"Orbit\"\n      style={{ width: 300 }}\n      extra={<a onClick={() => { \n        addOrbitFn({\n          eccentricity: e,\n          semimajorAxis: a,\n          inclination: i,\n          longitudeOfAscendingNode: long,\n          argumentOfPeriapsis: arg,\n          trueAnomaly: t,\n        })\n        resetInput()\n      }}>Create</a>}\n    >\n      <Input addonBefore='Eccentricity' value={e} onChange={e => setE(filterInput(e.target.value))}/>\n      <Input addonBefore='Semimajor Axis' value={a} onChange={e => setA(filterInput(e.target.value))}/>\n      <Input addonBefore='Inclination' value={i} onChange={e => setI(filterInput(e.target.value))}/>\n      <Input addonBefore='Long. of Acend.' value={long} onChange={e => setLong(filterInput(e.target.value))}/>\n      <Input addonBefore='Arg. of Peri.' value={arg} onChange={e => setArg(filterInput(e.target.value))}/>\n      <Input addonBefore='True Anomaly' value={t} onChange={e => setT(filterInput(e.target.value))}/>\n    </Card>\n  )\n}\n\nconst OrbitListItem = (props: {\n  id: string\n  orbit: Orbit\n  rmOrbitFn: (id: string) => void\n}) => {\n\n  const { id, orbit, rmOrbitFn } = props\n\n  return (\n    <Card\n      size=\"small\"\n      title=\"Orbit\"\n      style={{ width: 300 }}\n      extra={<a onClick={() => { rmOrbitFn(id) }}>Delete</a>}\n    >\n      <p> Eccentricity {orbit.eccentricity} </p>\n      <p> Semimajor Axis {orbit.semimajorAxis} </p>\n      <p> Inclination {orbit.inclination} </p>\n      <p> Longitude of Ascending Node {orbit.longitudeOfAscendingNode} </p>\n      <p> Argument of Periapsis {orbit.argumentOfPeriapsis} </p>\n      <p> True Anomaly {orbit.trueAnomaly} </p>\n    </Card>\n  )\n}\n\nconst OrbitList = (props: {\n  orbits: { id: string, orbit: Orbit }[]\n  addOrbitFn: (orbit: Orbit) => void\n  rmOrbitFn: (id: string) => void\n}) => {\n\n  const { orbits, addOrbitFn, rmOrbitFn } = props\n\n  return (\n    <div>\n      {\n        orbits.map(o =>\n          <OrbitListItem\n            id={o.id}\n            orbit={o.orbit}\n            rmOrbitFn={rmOrbitFn}\n          />\n        )\n      }\n\n      <AddOrbitModal\n        addOrbitFn={addOrbitFn}\n      />\n\n    </div>\n  )\n}\n\nexport default OrbitList","import { useState } from 'react';\nimport OrbitList from './OrbitList';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { Orbit } from '../Orbits/Orbit'\n\ninterface UuidOrbit {\n  id: string\n  orbit: Orbit\n}\n\nfunction App() {\n\n  const [ orbitList, updateOrbitList ] = useState<UuidOrbit[]>([])\n\n  const addOrbitToList = (newOrbit: Orbit): void => {\n    updateOrbitList( [ ...orbitList, { id: uuidv4(), orbit: newOrbit} ] )\n  }\n\n  const deleteOrbitById = (id: string): void => {\n    updateOrbitList( orbitList.filter(o => o.id !== id) )\n  }\n\n  return (\n    <div>\n\n      <OrbitList\n        orbits={orbitList}\n        addOrbitFn={addOrbitToList}\n        rmOrbitFn={deleteOrbitById}\n      />\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry: () => void)  => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}